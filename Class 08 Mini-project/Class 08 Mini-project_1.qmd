---
title: "Class 08"
author: "Yu-Chia Huang (A59026739)"
format: pdf
---

In today's lab we will examine some breast cancer biopsy data and apply our clustering and PCA methods to see what we can learn.

```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names = 1)
head(wisc.df)
```

```{r}
#skimr::skim(wisc.df)
```

Store diagnosis column for later use we will exclude this from our dataset for analysis.

```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis)
wisc.data <- wisc.df[,-1]
diagnosis
```

>Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

There are 569 observations.

>Q2. How many of the observations have a malignant diagnosis?

```{r}
sum(diagnosis=="M")
table(wisc.df$diagnosis)
```

212 Observations have a malignant diagnosis.

>Q3. How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.df)
```

```{r}
ncol(wisc.df)
grep("_mean", colnames(wisc.df), value=T)
```

10 variables/features in the data are suffixed with _mean.

# 2. Principal Component Analysis

We need to use `scale=TRUE` here as shown above with our `skin()` report. We could also look at the sd and mean of our columns and see they are on very different scales.

# Check column means and standard deviations
colMeans(wisc.data)

```{r}
colMeans((wisc.data))
apply(wisc.data,2,sd)
```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary(wisc.pr)
```

>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

The Proportion of Variance captured by PC1 is 0.4427.

```{r}
v <- summary(wisc.pr)
pcvar <- v$importance[3,]
pcvar["PC1"]
```


>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

```{r}
#How many PCs to get 0.7 or more?
pcvar >= 0.7
```

Three PCs are required. The Cumulative Proportion of PC3 is 0.72636.

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
which(pcvar >= 0.9)
which(pcvar >= 0.9)[1]
```

Seven PCs are required. The Cumulative Proportion of PC7 is 0.91010.

Our first PC plot of PC1 vs. PC2 colord  by the experts diagnosis...

```{r}
#wisc.pr$x
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=as.factor(diagnosis))
```

#Interpreting PCA results

>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

It's difficult to understand. Because the data are too complicated and too many noises.

```{r}
biplot(wisc.pr)
```

```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis,  xlab = "PC1", ylab = "PC2")
```

>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

It's clearer to see the group benign and group malignancy indicated with different color.

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = diagnosis,  xlab = "PC1", ylab = "PC3")
```

#Using ggplot2

```{r}
#Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var/sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained", names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```
```{r}
#install.packages("factoextra")
```

```{r}
## ggplot based graph
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

#Communicating PCA results

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

?????

```{r}
#concave.points_mean is on column 8.
wisc.pr$rotation[8,1]
```

#3. Hierarchical clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled, method = "euclidean")
```

```{r}
wisc.hclust <- hclust(data.dist, method = "complete")
```

#Results of hierarchical clustering

>Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

Height around 19 can generate 4 clusters.

```{r}
plot(wisc.hclust)
abline(h = 19, col="red", lty=2)
```

#Selecting number of clusters

#Clustering in PC space

I will pick 3 PCs here for further analysis but you can use more (e.g. include 90% variance etc.). It is your choice here.

```{r}
# Cut tree into 4 clusters
wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```

>Q11. OPTIONAL: Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?

#Using different methods

```{r}
#As we discussed in our last class videos there are number of different “methods” we can use to combine points during the hierarchical clustering procedure. These include "single", "complete", "average" and (my favorite) "ward.D2".

```


>Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.



#4. Combining methods
#Clustering on PCA results

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method="ward.D2")
plot(wisc.pr.hclust)
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
#install.packages("rgl")
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
```

```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method="ward.D2")
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
```

>Q13. How well does the newly created model with four clusters separate out the two diagnoses?



```{r}
# Compare to actual diagnoses
table(wisc.pr.hclust.clusters, diagnosis)
```

>Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.



```{r}
table(wisc.hclust.clusters, diagnosis)
```

#5. Sensitivity/Specificity

>Q15. OPTIONAL: Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

## 6. Prediction

>Q16. Which of these new patients should we prioritize for follow up based on your results?
